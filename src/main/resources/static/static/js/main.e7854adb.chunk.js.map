{"version":3,"sources":["components/Project/CreateProjectButton.js","actions/types.js","actions/projectActions.js","components/Project/Projectitem.js","components/Dashboard.js","securityUtils/setJWTToken.js","actions/securityActions.js","components/Layout/Header.js","components/Project/AddProject.js","reducers/backlogReducer.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/securityReducer.js","reducers/index.js","store.js","components/Project/UpdateProject.js","components/ProjectBoard/ProjectTask/ProjectTask.js","actions/backlogActions.js","components/ProjectBoard/Backlog.js","components/ProjectBoard/ProjectBoard.js","components/ProjectBoard/ProjectTask/AddProjectTask.js","components/ProjectBoard/ProjectTask/UpdateProjectTask.js","components/Layout/Landing.js","components/UserManagement/Register.js","components/UserManagement/Login.js","securityUtils/SecureRoute.js","App.js","reportWebVitals.js","index.js"],"names":["CreateProjectButton","Fragment","Link","to","className","GET_ERRORS","GET_PROJECTS","GET_PROJECT","DELETE_PROJECT","GET_BACKLOG","GET_PROJECT_TASK","DELETE_PROJECT_TASK","SET_CURRENT_USER","createProject","project","history","dispatch","a","axios","post","push","type","payload","response","data","ProjectItem","onDeleteClick","id","props","deleteProject","this","projectIdentifier","projectName","description","onClick","bind","Component","connect","window","confirm","delete","Dashboard","getProjects","projects","map","Projectitem","state","get","res","setJWTToken","token","defaults","headers","common","logout","localStorage","removeItem","Header","location","href","headerLinks","security","validToken","user","userIsAuthenticated","fullName","userIsNotAuthenticated","AddProject","start_date","end_date","errors","onChange","onSubmit","nextProps","setState","e","target","name","value","preventDefault","newProject","classnames","placeholder","initialState","project_tasks","project_task","booleanActionPayload","combineReducers","action","filter","backlog","projectSequence","middleware","thunk","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION__","f","UpdateProject","match","params","getProject","updateProject","disabled","ProjectTask","backlog_id","pt_id","deleteProjectTask","priorityString","priorityClass","priority","summary","acceptanceCriteria","Backlog","tasks","project_tasks_prop","todoItems","inProgressItems","doneItems","i","length","status","ProjectBoard","getBacklog","BoardContent","lenght","projectNotFound","role","boardAlgorithm","AddProjectTask","dueDate","newTask","addProjectTask","UpdateProjectTask","create_At","getProjectTask","updateProjectTask","patch","Landing","Register","username","password","confirmPassword","newUser","createNewUser","Login","LoginRequest","login","setItem","decoded","jwt_decode","component","otherProps","Route","render","Redirect","jwtToken","decoded_jwtToken","currentTime","Date","now","exp","App","exact","path","Switch","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e7854adb.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CreateProjectButton = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Link to=\"/addProject\" className=\"btn btn-lg btn-info bg-dark\">\r\n        Create a Project\r\n      </Link>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default CreateProjectButton;\r\n","export const GET_ERRORS = \"GET_ERRORS\";\r\nexport const GET_PROJECTS = \"GET_PROJECTS\";\r\nexport const GET_PROJECT = \"GET_PROJECT\";\r\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";\r\n\r\n//Types for BACKLOG ACTIONS\r\n\r\nexport const GET_BACKLOG = \"GET_BACKLOG\";\r\nexport const GET_PROJECT_TASK = \"GET_PROJECT_TASK\";\r\nexport const DELETE_PROJECT_TASK = \"DELETE_PROJECT_TASK\";\r\n\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\r\n","import axios from \"axios\";\r\nimport { GET_ERRORS, GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"./types\";\r\n\r\nexport const createProject = (project, history) => async (dispatch) => {\r\n  try {\r\n    await axios.post(\"/api/project\", project);\r\n    history.push(\"/dashboard\");\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {},\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getProjects = () => async (dispatch) => {\r\n  const res = await axios.get(\"/api/project/all\");\r\n  dispatch({\r\n    type: GET_PROJECTS,\r\n    payload: res.data,\r\n  });\r\n};\r\nexport const getProject = (id, history) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(`/api/project/${id}`);\r\n    dispatch({\r\n      type: GET_PROJECT,\r\n      payload: res.data,\r\n    });\r\n  } catch (error) {\r\n    history.push(\"/dashboard\");\r\n  }\r\n};\r\nexport const deleteProject = (id) => async (dispatch) => {\r\n  if (\r\n    window.confirm(\r\n      \" This action will delete all your tasks and data. Do you want to continue?\"\r\n    )\r\n  ) {\r\n    await axios.delete(`/api/project/${id}`);\r\n    dispatch({\r\n      type: DELETE_PROJECT,\r\n      payload: id,\r\n    });\r\n  }\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteProject } from \"../../actions/projectActions\";\r\n\r\nclass ProjectItem extends Component {\r\n  onDeleteClick = (id) => {\r\n    this.props.deleteProject(id);\r\n  };\r\n  render() {\r\n    const { project } = this.props;\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"card card-body bg-light mb-3\">\r\n          <div className=\"row\">\r\n            <div className=\"col-2\">\r\n              <span className=\"mx-auto\">{project.projectIdentifier}</span>\r\n            </div>\r\n            <div className=\"col-lg-6 col-md-4 col-8\">\r\n              <h3>{project.projectName}</h3>\r\n              <p>{project.description}</p>\r\n            </div>\r\n            <div className=\"col-md-4 d-none d-lg-block\">\r\n              <ul className=\"list-group\">\r\n                <Link to={`/projectBoard/${project.projectIdentifier}`}>\r\n                  <li className=\"list-group-item board\">\r\n                    <i className=\"fa fa-flag-checkered pr-1\"> Project Board </i>\r\n                  </li>\r\n                </Link>\r\n                <Link to={`/updateProject/${project.projectIdentifier}`}>\r\n                  <li className=\"list-group-item update\">\r\n                    <i className=\"fa fa-edit pr-1\"> Update Project Info</i>\r\n                  </li>\r\n                </Link>\r\n\r\n                <li\r\n                  className=\"list-group-item delete\"\r\n                  onClick={this.onDeleteClick.bind(\r\n                    this,\r\n                    project.projectIdentifier\r\n                  )}\r\n                >\r\n                  <i className=\"fa fa-minus-circle pr-1\"> Delete Project</i>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectItem.propTypes = {\r\n  deleteProject: PropTypes.func.isRequired,\r\n};\r\nexport default connect(null, { deleteProject })(ProjectItem);\r\n","import React, { Component } from \"react\";\r\n//import Header from \"./Layout/Header\";\r\nimport CreateProjectButton from \"./Project/CreateProjectButton\";\r\nimport Projectitem from \"./Project/Projectitem\";\r\nimport { connect } from \"react-redux\";\r\nimport { getProjects } from \"../actions/projectActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Dashboard extends Component {\r\n  componentDidMount() {\r\n    this.props.getProjects();\r\n  }\r\n\r\n  render() {\r\n    const { projects } = this.props.project;\r\n    return (\r\n      <div className=\"projects\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n              <h1 className=\"display-4 text-center\">Projects</h1>\r\n              <br />\r\n              <CreateProjectButton />\r\n              <br />\r\n              <hr />\r\n              {projects.map((project) => (\r\n                <Projectitem key={project.id} project={project} />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nDashboard.propTypes = {\r\n  project: PropTypes.object.isRequired,\r\n  getProjects: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  project: state.project,\r\n});\r\nexport default connect(mapStateToProps, { getProjects })(Dashboard);\r\n","import axios from \"axios\";\r\n\r\nconst setJWTToken = (token) => {\r\n  if (token) {\r\n    axios.defaults.headers.common[\"Authorization\"] = token;\r\n  } else {\r\n    delete axios.defaults.headers.common[\"Authorization\"];\r\n  }\r\n};\r\n\r\nexport default setJWTToken;\r\n","import axios from \"axios\";\r\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\r\nimport setJWTToken from \"../securityUtils/setJWTToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nexport const createNewUser = (newUser, history) => async (dispatch) => {\r\n  try {\r\n    await axios.post(\"/api/users/register\", newUser);\r\n    history.push(\"/login\");\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {},\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data,\r\n    });\r\n  }\r\n};\r\n\r\nexport const login = (LoginRequest) => async (dispatch) => {\r\n  try {\r\n    // post => Login Request\r\n    const res = await axios.post(\"/api/users/login\", LoginRequest);\r\n    // extract token from res.data\r\n    const { token } = res.data;\r\n    // store the token in the localStorage\r\n    localStorage.setItem(\"jwtToken\", token);\r\n    // set our token in header ***\r\n    setJWTToken(token);\r\n    // decode token on React\r\n    const decoded = jwt_decode(token);\r\n    // dispatch to our securityReducer\r\n    dispatch({\r\n      type: SET_CURRENT_USER,\r\n      payload: decoded,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data,\r\n    });\r\n  }\r\n};\r\nexport const logout = () => (dispatch) => {\r\n  localStorage.removeItem(\"jwtToken\");\r\n  setJWTToken(false);\r\n  dispatch({\r\n    type: SET_CURRENT_USER,\r\n    payload: {},\r\n  });\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"../../actions/securityActions\";\r\n\r\nclass Header extends Component {\r\n  logout() {\r\n    this.props.logout();\r\n    window.location.href = \"/\";\r\n  }\r\n  render() {\r\n    const { validToken, user } = this.props.security;\r\n\r\n    const userIsAuthenticated = (\r\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n        <ul className=\"navbar-nav mr-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/dashboard\">\r\n              Dashboard\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/dashboard\">\r\n              <i className=\"fas fa-user-circle mr-1\" />\r\n              {user.fullName}\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link\r\n              className=\"nav-link\"\r\n              to=\"/logout\"\r\n              onClick={this.logout.bind(this)}\r\n            >\r\n              Logout\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n\r\n    const userIsNotAuthenticated = (\r\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/register\">\r\n              Sign Up\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/login\">\r\n              Login\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n\r\n    let headerLinks;\r\n\r\n    if (validToken && user) {\r\n      headerLinks = userIsAuthenticated;\r\n    } else {\r\n      headerLinks = userIsNotAuthenticated;\r\n    }\r\n\r\n    return (\r\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\r\n        <div className=\"container\">\r\n          <Link className=\"navbar-brand\" to=\"/\">\r\n            Personal Project Management Tool\r\n          </Link>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#mobile-nav\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\" />\r\n          </button>\r\n          {headerLinks}\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nHeader.propTypes = {\r\n  logout: PropTypes.func.isRequired,\r\n  security: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  security: state.security,\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(Header);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { createProject } from \"../../actions/projectActions\";\r\nimport classnames from \"classnames\";\r\n\r\nclass AddProject extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      projectName: \"\",\r\n      projectIdentifier: \"\",\r\n      description: \"\",\r\n      start_date: \"\",\r\n      end_date: \"\",\r\n      errors: {},\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  //LifeCycle Hook\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const newProject = {\r\n      projectName: this.state.projectName,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      description: this.state.description,\r\n      start_date: this.state.start_date,\r\n      end_date: this.state.end_date,\r\n    };\r\n\r\n    this.props.createProject(newProject, this.props.history);\r\n    //console.log(newProject);\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"project\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-8 m-auto\">\r\n                <h5 className=\"display-4 text-center\">\r\n                  Create / Edit Project form\r\n                </h5>\r\n                <hr />\r\n                <form onSubmit={this.onSubmit}>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className={classnames(\"form-control form-control-lg \", {\r\n                        \"is-invalid\": errors.projectName,\r\n                      })}\r\n                      placeholder=\"Project Name\"\r\n                      name=\"projectName\"\r\n                      value={this.state.projectName}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    {errors.projectName && (\r\n                      <div className=\"invalid-feedback\">\r\n                        {errors.projectName}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className={classnames(\"form-control form-control-lg \", {\r\n                        \"is-invalid\": errors.projectIdentifier,\r\n                      })}\r\n                      placeholder=\"Unique Project ID\"\r\n                      name=\"projectIdentifier\"\r\n                      value={this.state.projectIdentifier}\r\n                      onChange={this.onChange}\r\n                    />\r\n\r\n                    {errors.projectIdentifier && (\r\n                      <div className=\"invalid-feedback\">\r\n                        {errors.projectIdentifier}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n\r\n                  <div className=\"form-group\">\r\n                    <textarea\r\n                      className={classnames(\"form-control form-control-lg \", {\r\n                        \"is-invalid\": errors.description,\r\n                      })}\r\n                      placeholder=\"Project Description\"\r\n                      name=\"description\"\r\n                      value={this.state.description}\r\n                      onChange={this.onChange}\r\n                    ></textarea>\r\n                    {errors.description && (\r\n                      <div className=\"invalid-feedback\">\r\n                        {errors.description}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <h6>Start Date</h6>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"form-control form-control-lg\"\r\n                      name=\"start_date\"\r\n                      value={this.state.start_date}\r\n                      onChange={this.onChange}\r\n                    />\r\n                  </div>\r\n                  <h6>Estimated End Date</h6>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"form-control form-control-lg\"\r\n                      name=\"end_date\"\r\n                      value={this.state.end_date}\r\n                      onChange={this.onChange}\r\n                    />\r\n                  </div>\r\n\r\n                  <input\r\n                    type=\"submit\"\r\n                    className=\"btn btn-dark btn-block mt-4\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAddProject.propTypes = {\r\n  createProject: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { createProject })(AddProject);\r\n","import {\r\n  GET_BACKLOG,\r\n  GET_PROJECT_TASK,\r\n  DELETE_PROJECT_TASK,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  project_tasks: [],\r\n  project_task: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_BACKLOG:\r\n      return {\r\n        ...state,\r\n        project_tasks: action.payload,\r\n      };\r\n\r\n    case GET_PROJECT_TASK:\r\n      return {\r\n        ...state,\r\n        project_task: action.payload,\r\n      };\r\n\r\n    case DELETE_PROJECT_TASK:\r\n      return {\r\n        ...state,\r\n        project_tasks: state.project_tasks.filter(\r\n          (project_task) => project_task.projectSequence !== action.payload\r\n        ),\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { GET_ERRORS } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      return action.payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { GET_PROJECTS } from \"../actions/types\";\r\nimport { GET_PROJECT } from \"../actions/types\";\r\nimport { DELETE_PROJECT } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  projects: [],\r\n  project: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_PROJECTS:\r\n      return {\r\n        ...state,\r\n        projects: action.payload,\r\n      };\r\n    case GET_PROJECT:\r\n      return {\r\n        ...state,\r\n        project: action.payload,\r\n      };\r\n    case DELETE_PROJECT:\r\n      return {\r\n        ...state,\r\n        projects: state.projects.filter(\r\n          (project) => project.projectIdentifier !== action.payload\r\n        ),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { SET_CURRENT_USER } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  validToken: false,\r\n  user: {},\r\n};\r\n\r\nconst booleanActionPayload = (payload) => {\r\n  if (payload) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_CURRENT_USER:\r\n      return {\r\n        ...state,\r\n        validToken: booleanActionPayload(action.payload),\r\n        user: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport backlogReducer from \"./backlogReducer\";\r\nimport errorReducer from \"./errorReducer\";\r\nimport projectReducer from \"./projectReducer\";\r\nimport securityReducer from \"./securityReducer\";\r\n\r\nexport default combineReducers({\r\n  errors: errorReducer,\r\n  project: projectReducer,\r\n  backlog: backlogReducer,\r\n  security: securityReducer,\r\n});\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\n\r\nlet store;\r\n\r\nif (window.navigator.userAgent.includes(\"Chrome\")) {\r\n  store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(\r\n      applyMiddleware(...middleware),\r\n      window.__REDUX_DEVTOOLS_EXTENSION__\r\n        ? window.__REDUX_DEVTOOLS_EXTENSION__()\r\n        : (f) => f\r\n    )\r\n  );\r\n} else {\r\n  store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(applyMiddleware(...middleware))\r\n  );\r\n}\r\n\r\nexport default store;\r\n","import React, { Component } from \"react\";\r\nimport { getProject, createProject } from \"../../actions/projectActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\n\r\nclass UpdateProject extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      id: \"\",\r\n      projectName: \"\",\r\n      projectIdentifier: \"\",\r\n      description: \"\",\r\n      start_date: \"\",\r\n      end_date: \"\",\r\n      errors: {},\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n    const {\r\n      id,\r\n      projectName,\r\n      projectIdentifier,\r\n      description,\r\n      start_date,\r\n      end_date,\r\n    } = nextProps.project;\r\n    this.setState({\r\n      id,\r\n      projectName,\r\n      projectIdentifier,\r\n      description,\r\n      start_date,\r\n      end_date,\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    this.props.getProject(id, this.props.history);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const updateProject = {\r\n      id: this.state.id,\r\n      projectName: this.state.projectName,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      description: this.state.description,\r\n      start_date: this.state.start_date,\r\n      end_date: this.state.end_date,\r\n    };\r\n    this.props.createProject(updateProject, this.props.history);\r\n  }\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"project\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h5 className=\"display-4 text-center\">Update Project form</h5>\r\n              <hr />\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                      \"is-invalid\": errors.projectName,\r\n                    })}\r\n                    placeholder=\"Project Name\"\r\n                    name=\"projectName\"\r\n                    value={this.state.projectName}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.projectName && (\r\n                    <div className=\"invalid-feedback\">{errors.projectName}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Unique Project ID\"\r\n                    name=\"projectIdentifier\"\r\n                    value={this.state.projectIdentifier}\r\n                    onChange={this.onChange}\r\n                    disabled\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                      \"is-invalid\": errors.description,\r\n                    })}\r\n                    placeholder=\"Project Description\"\r\n                    name=\"description\"\r\n                    value={this.state.description}\r\n                    onChange={this.onChange}\r\n                  ></textarea>\r\n                  {errors.description && (\r\n                    <div className=\"invalid-feedback\">{errors.description}</div>\r\n                  )}\r\n                </div>\r\n                <h6>Start Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"start_date\"\r\n                    value={this.state.start_date}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <h6>Estimated End Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"end_date\"\r\n                    value={this.state.end_date}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n\r\n                <input type=\"submit\" className=\"btn btn-dark btn-block mt-4\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nUpdateProject.propTypes = {\r\n  getProject: PropTypes.func.isRequired,\r\n  createProject: PropTypes.func.isRequired,\r\n  project: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  project: state.project.project,\r\n  errors: state.errors,\r\n});\r\nexport default connect(mapStateToProps, { getProject, createProject })(\r\n  UpdateProject\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { deleteProjectTask } from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass ProjectTask extends Component {\r\n  onDeleteClick(backlog_id, pt_id) {\r\n    this.props.deleteProjectTask(backlog_id, pt_id);\r\n  }\r\n  render() {\r\n    const { project_task } = this.props;\r\n    let priorityString;\r\n    let priorityClass;\r\n\r\n    if (project_task.priority === 1) {\r\n      priorityClass = \"bg-danger text-light\";\r\n      priorityString = \"HIGH\";\r\n    }\r\n\r\n    if (project_task.priority === 2) {\r\n      priorityClass = \"bg-warning text-light\";\r\n      priorityString = \"MEDIUM\";\r\n    }\r\n\r\n    if (project_task.priority === 3) {\r\n      priorityClass = \"bg-info text-light\";\r\n      priorityString = \"LOW\";\r\n    }\r\n\r\n    return (\r\n      <div className=\"card mb-1 bg-light\">\r\n        <div className={`card-header text-primary ${priorityClass}`}>\r\n          ID: {project_task.projectSequence} -- Priority: {priorityString}\r\n        </div>\r\n        <div className=\"card-body bg-light\">\r\n          <h5 className=\"card-title\">{project_task.summary}</h5>\r\n          <p className=\"card-text text-truncate \">\r\n            {project_task.acceptanceCriteria}\r\n          </p>\r\n          <Link\r\n            to={`/updateProjectTask/${project_task.projectIdentifier}/${project_task.projectSequence}`}\r\n            className=\"btn btn-primary\"\r\n          >\r\n            View / Update\r\n          </Link>\r\n\r\n          <button\r\n            className=\"btn btn-danger ml-4\"\r\n            onClick={this.onDeleteClick.bind(\r\n              this,\r\n              project_task.projectIdentifier,\r\n              project_task.projectSequence\r\n            )}\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectTask.propTypes = {\r\n  deleteProjectTask: PropTypes.func.isRequired,\r\n};\r\nexport default connect(null, { deleteProjectTask })(ProjectTask);\r\n","import axios from \"axios\";\r\nimport {\r\n  GET_ERRORS,\r\n  GET_BACKLOG,\r\n  GET_PROJECT_TASK,\r\n  DELETE_PROJECT_TASK,\r\n} from \"./types\";\r\n\r\nexport const addProjectTask =\r\n  (backlog_id, project_task, history) => async (dispatch) => {\r\n    try {\r\n      await axios.post(`/api/backlog/${backlog_id}`, project_task);\r\n      history.push(`/projectBoard/${backlog_id}`);\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: {},\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data,\r\n      });\r\n    }\r\n  };\r\nexport const getBacklog = (backlog_id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(`/api/backlog/${backlog_id}`);\r\n    dispatch({\r\n      type: GET_BACKLOG,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getProjectTask =\r\n  (backlog_id, pt_id, history) => async (dispatch) => {\r\n    try {\r\n      const res = await axios.get(`/api/backlog/${backlog_id}/${pt_id}`);\r\n      dispatch({\r\n        type: GET_PROJECT_TASK,\r\n        payload: res.data,\r\n      });\r\n    } catch (err) {\r\n      history.push(\"/dashboard\");\r\n    }\r\n  };\r\n\r\nexport const updateProjectTask =\r\n  (backlog_id, pt_id, project_task, history) => async (dispatch) => {\r\n    try {\r\n      await axios.patch(`/api/backlog/${backlog_id}/${pt_id}`, project_task);\r\n      history.push(`/projectBoard/${backlog_id}`);\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: {},\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data,\r\n      });\r\n    }\r\n  };\r\n\r\nexport const deleteProjectTask = (backlog_id, pt_id) => async (dispatch) => {\r\n  if (\r\n    window.confirm(\r\n      `You are deleting project task ${pt_id}, this action cannot be undone`\r\n    )\r\n  ) {\r\n    await axios.delete(`/api/backlog/${backlog_id}/${pt_id}`);\r\n    dispatch({\r\n      type: DELETE_PROJECT_TASK,\r\n      payload: pt_id,\r\n    });\r\n  }\r\n};\r\n","import React, { Component } from \"react\";\r\nimport ProjectTask from \"./ProjectTask/ProjectTask\";\r\n\r\nclass Backlog extends Component {\r\n  render() {\r\n    const { project_tasks_prop } = this.props;\r\n    const tasks = project_tasks_prop.map((project_task) => (\r\n      <ProjectTask key={project_task.id} project_task={project_task} />\r\n    ));\r\n\r\n    let todoItems = [];\r\n    let inProgressItems = [];\r\n    let doneItems = [];\r\n\r\n    for (let i = 0; i < tasks.length; i++) {\r\n      if (tasks[i].props.project_task.status === \"TO_DO\") {\r\n        todoItems.push(tasks[i]);\r\n      }\r\n      if (tasks[i].props.project_task.status === \"IN_PROGRESS\") {\r\n        inProgressItems.push(tasks[i]);\r\n      }\r\n      if (tasks[i].props.project_task.status === \"DONE\") {\r\n        doneItems.push(tasks[i]);\r\n      }\r\n    }\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-3\">\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-secondary text-white\">\r\n                <h3>TO DO</h3>\r\n              </div>\r\n            </div>\r\n            {todoItems}\r\n            {\r\n              // <!-- SAMPLE PROJECT TASK STARTS HERE -->\r\n            }\r\n          </div>\r\n\r\n          <div className=\"col-md-3\">\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-primary text-white\">\r\n                <h3>In Progress</h3>\r\n              </div>\r\n            </div>\r\n            {inProgressItems}\r\n          </div>\r\n          <div className=\"col-md-3\">\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-success text-white\">\r\n                <h3>Done</h3>\r\n              </div>\r\n            </div>\r\n            {doneItems}\r\n          </div>\r\n\r\n          {\r\n            //<!-- -------------------------------------------------------------------- -->\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Backlog;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Backlog from \"./Backlog\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getBacklog } from \"../../actions/backlogActions\";\r\n\r\nclass ProjectBoard extends Component {\r\n  //constructor to handle errors\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      errors: {},\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    this.props.getBacklog(id);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n  render() {\r\n    const { id } = this.props.match.params;\r\n    const { project_tasks } = this.props.backlog;\r\n    const { errors } = this.state;\r\n    let BoardContent;\r\n\r\n    const boardAlgorithm = (errors, project_tasks) => {\r\n      if (project_tasks.lenght < 1) {\r\n        if (errors.projectNotFound) {\r\n          return (\r\n            <div className=\" alert alert-info text-center\" role=\"alert\">\r\n              {errors.projectNotFound}\r\n            </div>\r\n          );\r\n        } else if (errors.projectIdentifier) {\r\n          return (\r\n            <div className=\" alert alert-info text-center\" role=\"alert\">\r\n              {errors.projectIdentifier}\r\n            </div>\r\n          );\r\n        } else {\r\n          return (\r\n            <div className=\" alert alert-danger text-center\" role=\"alert\">\r\n              No Project on this board\r\n            </div>\r\n          );\r\n        }\r\n      } else {\r\n        return <Backlog project_tasks_prop={project_tasks} />;\r\n      }\r\n    };\r\n\r\n    BoardContent = boardAlgorithm(errors, project_tasks);\r\n    return (\r\n      <div className=\"container\">\r\n        <Link to={`/addProjectTask/${id}`} className=\"btn btn-dark mb-3\">\r\n          <i className=\"fas fa-plus-circle\"> Create Project Task</i>\r\n        </Link>\r\n        <br />\r\n        <hr />\r\n        {BoardContent}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectBoard.propTypes = {\r\n  backlog: PropTypes.object.isRequired,\r\n  getBacklog: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  backlog: state.backlog,\r\n  errors: state.errors,\r\n});\r\nexport default connect(mapStateToProps, { getBacklog })(ProjectBoard);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { addProjectTask } from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass AddProjectTask extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const { id } = this.props.match.params;\r\n\r\n    this.state = {\r\n      summary: \"\",\r\n      acceptanceCriteria: \"\",\r\n      status: \"\",\r\n      priority: \"\",\r\n      dueDate: \"\",\r\n      projectIdentifier: id,\r\n      errors: {},\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  // on change\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n  //on submit\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const newTask = {\r\n      summary: this.state.summary,\r\n      acceptanceCriteria: this.state.acceptanceCriteria,\r\n      status: this.state.status,\r\n      priority: this.state.priority,\r\n      dueDate: this.state.dueDate,\r\n    };\r\n\r\n    this.props.addProjectTask(\r\n      this.state.projectIdentifier,\r\n      newTask,\r\n      this.props.history\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { id } = this.props.match.params;\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"add-PBI\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link to={`/projectBoard/${id}`} className=\"btn btn-light\">\r\n                Back to Project Board\r\n              </Link>\r\n              <h4 className=\"display-4 text-center\">Add Project Task</h4>\r\n              <p className=\"lead text-center\">Project Name + Project Code</p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.summary,\r\n                    })}\r\n                    name=\"summary\"\r\n                    placeholder=\"Project Task summary\"\r\n                    value={this.state.summary}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.summary && (\r\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Acceptance Criteria\"\r\n                    name=\"acceptanceCriteria\"\r\n                    value={this.state.acceptanceCriteria}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <h6>Due Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"dueDate\"\r\n                    value={this.state.dueDate}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"priority\"\r\n                    value={this.state.priority}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value={0}>Select Priority</option>\r\n                    <option value={1}>High</option>\r\n                    <option value={2}>Medium</option>\r\n                    <option value={3}>Low</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"status\"\r\n                    value={this.state.status}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value=\"\">Select Status</option>\r\n                    <option value=\"TO_DO\">TO DO</option>\r\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                    <option value=\"DONE\">DONE</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAddProjectTask.propTypes = {\r\n  addProjectTask: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { addProjectTask })(AddProjectTask);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  getProjectTask,\r\n  updateProjectTask,\r\n} from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass UpdateProjectTask extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      id: \"\",\r\n      projectSequence: \"\",\r\n      summary: \"\",\r\n      acceptanceCriteria: \"\",\r\n      status: \"\",\r\n      priority: \"\",\r\n      dueDate: \"\",\r\n      projectIdentifier: \"\",\r\n      create_At: \"\",\r\n      errors: {},\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    const { backlog_id, pt_id } = this.props.match.params;\r\n    this.props.getProjectTask(backlog_id, pt_id, this.props.history);\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n    const {\r\n      id,\r\n      projectSequence,\r\n      summary,\r\n      acceptanceCriteria,\r\n      status,\r\n      priority,\r\n      dueDate,\r\n      projectIdentifier,\r\n      create_At,\r\n    } = nextProps.project_task;\r\n\r\n    this.setState({\r\n      id,\r\n      projectSequence,\r\n      summary,\r\n      acceptanceCriteria,\r\n      status,\r\n      priority,\r\n      dueDate,\r\n      projectIdentifier,\r\n      create_At,\r\n    });\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const UpdateProjectTask = {\r\n      id: this.state.id,\r\n      projectSequence: this.state.projectSequence,\r\n      summary: this.state.summary,\r\n      acceptanceCriteria: this.state.acceptanceCriteria,\r\n      status: this.state.status,\r\n      priority: this.state.priority,\r\n      dueDate: this.state.dueDate,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      create_At: this.state.create_At,\r\n    };\r\n\r\n    // console.log(UpdateProjectTask);\r\n    this.props.updateProjectTask(\r\n      this.state.projectIdentifier,\r\n      this.state.projectSequence,\r\n      UpdateProjectTask,\r\n      this.props.history\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"add-PBI\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link\r\n                to={`/projectBoard/${this.state.projectIdentifier}`}\r\n                className=\"btn btn-light\"\r\n              >\r\n                Back to Project Board\r\n              </Link>\r\n              <h4 className=\"display-4 text-center\">\r\n                Add /Update Project Task\r\n              </h4>\r\n              <p className=\"lead text-center\">\r\n                Project Name: {this.state.projectIdentifier} + Project Task ID:{\" \"}\r\n                {this.state.projectSequence}\r\n              </p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.summary,\r\n                    })}\r\n                    name=\"summary\"\r\n                    placeholder=\"Project Task summary\"\r\n                    value={this.state.summary}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.summary && (\r\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Acceptance Criteria\"\r\n                    name=\"acceptanceCriteria\"\r\n                    value={this.state.acceptanceCriteria}\r\n                    onChange={this.onChange}\r\n                  ></textarea>\r\n                </div>\r\n                <h6>Due Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"dueDate\"\r\n                    value={this.state.dueDate}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"priority\"\r\n                    value={this.state.priority}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value={0}>Select Priority</option>\r\n                    <option value={1}>High</option>\r\n                    <option value={2}>Medium</option>\r\n                    <option value={3}>Low</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"status\"\r\n                    value={this.state.status}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value=\"\">Select Status</option>\r\n                    <option value=\"TO_DO\">TO DO</option>\r\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                    <option value=\"DONE\">DONE</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nUpdateProjectTask.propTypes = {\r\n  getProjectTask: PropTypes.func.isRequired,\r\n  project_task: PropTypes.object.isRequired,\r\n  updateProjectTask: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  project_task: state.backlog.project_task,\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProjectTask, updateProjectTask })(\r\n  UpdateProjectTask\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Landing extends Component {\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"landing\">\r\n        <div className=\"light-overlay landing-inner text-dark\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12 text-center\">\r\n                <h1 className=\"display-3 mb-4\">Personal Project Tool</h1>\r\n                <p className=\"lead\">\r\n                  Create your account to join active projects or start your own\r\n                </p>\r\n                <hr />\r\n                <Link className=\"btn btn-lg btn-primary mr-2\" to=\"/register\">\r\n                  Sign Up\r\n                </Link>\r\n                <Link className=\"btn btn-lg btn-secondary mr-2\" to=\"/login\">\r\n                  Login\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nLanding.propTypes = {\r\n  security: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  security: state.security,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Landing);\r\n","import React, { Component } from \"react\";\r\nimport { createNewUser } from \"../../actions/securityActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\n\r\nclass Register extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      fullName: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n      errors: {},\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const newUser = {\r\n      username: this.state.username,\r\n      fullName: this.state.fullName,\r\n      password: this.state.password,\r\n      confirmPassword: this.state.confirmPassword,\r\n    };\r\n\r\n    this.props.createNewUser(newUser, this.props.history);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"register\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h1 className=\"display-4 text-center\">Sign Up</h1>\r\n              <p className=\"lead text-center\">Create your Account</p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.fullName,\r\n                    })}\r\n                    placeholder=\"Full Name\"\r\n                    name=\"fullName\"\r\n                    value={this.state.fullName}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.fullName && (\r\n                    <div className=\"invalid-feedback\">{errors.fullName}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"email\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.username,\r\n                    })}\r\n                    placeholder=\"Email Address (Username)\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.username && (\r\n                    <div className=\"invalid-feedback\">{errors.username}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.password,\r\n                    })}\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.password && (\r\n                    <div className=\"invalid-feedback\">{errors.password}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.confirmPassword,\r\n                    })}\r\n                    placeholder=\"Confirm Password\"\r\n                    name=\"confirmPassword\"\r\n                    value={this.state.confirmPassword}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.confirmPassword && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.confirmPassword}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nRegister.propTypes = {\r\n  createNewUser: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  security: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  errors: state.errors,\r\n  security: state.security,\r\n});\r\nexport default connect(mapStateToProps, { createNewUser })(Register);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { login } from \"../../actions/securityActions\";\r\n\r\nclass Login extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      errors: {},\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const LoginRequest = {\r\n      username: this.state.username,\r\n      password: this.state.password,\r\n    };\r\n\r\n    this.props.login(LoginRequest);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"login\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h1 className=\"display-4 text-center\">Log In</h1>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.username,\r\n                    })}\r\n                    placeholder=\"Email Address\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.username && (\r\n                    <div className=\"invalid-feedback\">{errors.username}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.password,\r\n                    })}\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.password && (\r\n                    <div className=\"invalid-feedback\">{errors.password}</div>\r\n                  )}\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLogin.propTypes = {\r\n  login: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  security: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  security: state.security,\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { login })(Login);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst SecuredRoute = ({ component: Component, security, ...otherProps }) => (\r\n  <Route\r\n    {...otherProps}\r\n    render={(props) =>\r\n      security.validToken === true ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect to=\"/login\" />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nSecuredRoute.propTypes = {\r\n  security: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  security: state.security,\r\n});\r\n\r\nexport default connect(mapStateToProps)(SecuredRoute);\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Dashboard from \"./components/Dashboard\";\nimport Header from \"./components/Layout/Header\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport AddProject from \"./components/Project/AddProject\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport UpdateProject from \"./components/Project/UpdateProject\";\nimport ProjectBoard from \"./components/ProjectBoard/ProjectBoard\";\nimport AddProjectTask from \"./components/ProjectBoard/ProjectTask/AddProjectTask\";\nimport UpdateProjectTask from \"./components/ProjectBoard/ProjectTask/UpdateProjectTask\";\nimport Landing from \"./components/Layout/Landing\";\nimport Register from \"./components/UserManagement/Register\";\nimport Login from \"./components/UserManagement/Login\";\nimport jwt_decode from \"jwt-decode\";\nimport setJWTToken from \"./securityUtils/setJWTToken\";\nimport { SET_CURRENT_USER } from \"./actions/types\";\nimport { logout } from \"./actions/securityActions\";\nimport SecuredRoute from \"./securityUtils/SecureRoute\";\n\nconst jwtToken = localStorage.jwtToken;\n\nif (jwtToken) {\n  setJWTToken(jwtToken);\n  const decoded_jwtToken = jwt_decode(jwtToken);\n  store.dispatch({\n    type: SET_CURRENT_USER,\n    payload: decoded_jwtToken,\n  });\n\n  const currentTime = Date.now() / 1000;\n  if (decoded_jwtToken.exp < currentTime) {\n    store.dispatch(logout());\n    window.location.href = \"/\";\n  }\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <Header />\n            {\n              //Public Routes\n            }\n\n            <Route exact path=\"/\" component={Landing} />\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/login\" component={Login} />\n\n            {\n              //Private Routes\n            }\n            <Switch>\n              <SecuredRoute exact path=\"/dashboard\" component={Dashboard} />\n              <SecuredRoute exact path=\"/addProject\" component={AddProject} />\n              <SecuredRoute\n                exact\n                path=\"/updateProject/:id\"\n                component={UpdateProject}\n              />\n              <SecuredRoute\n                exact\n                path=\"/projectBoard/:id\"\n                component={ProjectBoard}\n              />\n              <SecuredRoute\n                exact\n                path=\"/addProjectTask/:id\"\n                component={AddProjectTask}\n              />\n              <SecuredRoute\n                exact\n                path=\"/updateProjectTask/:backlog_id/:pt_id\"\n                component={UpdateProjectTask}\n              />\n            </Switch>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}